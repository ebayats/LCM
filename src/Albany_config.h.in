#ifndef ALBANY_CONFIG_H
#define ALBANY_CONFIG_H

// ===================== Macros to identify packages found in Trilinos ======================= //

#cmakedefine ALBANY_AMESOS2
#cmakedefine ALBANY_DTK
#cmakedefine ALBANY_FROSCH
#cmakedefine ALBANY_MUELU
#cmakedefine ALBANY_PAMGEN
#cmakedefine ALBANY_RBGEN
#cmakedefine ALBANY_ROL
#cmakedefine ALBANY_STK_PERCEPT
#cmakedefine ALBANY_STK_REBALANCE
#cmakedefine ALBANY_ZOLTAN

// ========================== General Albany build and capabilities options ============================== //

// Trilinos/Albany version details
#cmakedefine ALBANY_TRILINOS_GIT_COMMIT_ID "${ALBANY_TRILINOS_GIT_COMMIT_ID}"
#cmakedefine ALBANY_GIT_BRANCH "${ALBANY_GIT_BRANCH}"
#cmakedefine ALBANY_GIT_COMMIT_ID "${ALBANY_GIT_COMMIT_ID}"

// Albany compiler details
#cmakedefine ALBANY_CXX_COMPILER_ID "${ALBANY_CXX_COMPILER_ID}"
#cmakedefine ALBANY_CXX_COMPILER_VERSION "${ALBANY_CXX_COMPILER_VERSION}"

// Whether pde examples should be built
#cmakedefine ALBANY_DEMO_PDES

// Whether mesh and parameters depend on each others and/or solution
#cmakedefine ALBANY_MESH_DEPENDS_ON_PARAMETERS
#cmakedefine ALBANY_MESH_DEPENDS_ON_SOLUTION
#cmakedefine ALBANY_PARAMETERS_DEPEND_ON_SOLUTION

// Whether this is a nightly test build
#cmakedefine ALBANY_NIGHTLY_TEST

// Whether Albany output should be verbose
#cmakedefine ALBANY_VERBOSE

// Whether and how to check floating point exceptions
#cmakedefine ALBANY_CHECK_FPE
#cmakedefine ALBANY_STRONG_FPE_CHECK

// Whether to allow deprecated code to compile without warnings
#cmakedefine ALBANY_ENABLE_DEPRECATED

// Macros for memory analysis
#cmakedefine ALBANY_HAVE_MALLINFO
#cmakedefine ALBANY_HAVE_GETRUSAGE
#cmakedefine ALBANY_HAVE_KERNELGETMEMORYSIZE

// FTZ/DAZ macro
#cmakedefine ALBANY_FLUSH_DENORMALS

// FAD data type
#cmakedefine ALBANY_FAD_TYPE_SFAD
#cmakedefine ALBANY_SFAD_SIZE ${ALBANY_SFAD_SIZE}
#cmakedefine ALBANY_FAD_TYPE_SLFAD
#cmakedefine ALBANY_SLFAD_SIZE ${ALBANY_SLFAD_SIZE}
#cmakedefine ALBANY_TAN_FAD_TYPE_SFAD
#cmakedefine ALBANY_TAN_SFAD_SIZE ${ALBANY_TAN_SFAD_SIZE}
#cmakedefine ALBANY_TAN_FAD_TYPE_SLFAD
#cmakedefine ALBANY_TAN_SLFAD_SIZE ${ALBANY_TAN_SLFAD_SIZE}
#cmakedefine ALBANY_FADTYPE_NOTEQUAL_TANFADTYPE

// ============= Macros used to enable additional code, not limited to a particular package ============== //

#cmakedefine ALBANY_CONTACT
#cmakedefine ALBANY_OMEGA_H
#cmakedefine ALBANY_BGL

// ================ Package-specific macros ================= //

// --- LCM
#cmakedefine ALBANY_LAME
#cmakedefine ALBANY_LAMENT

#endif // ALBANY_CONFIG_H
